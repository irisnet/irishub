// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package oracle

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_MsgCreateFeed_6_list)(nil)

type _MsgCreateFeed_6_list struct {
	list *[]string
}

func (x *_MsgCreateFeed_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateFeed_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgCreateFeed_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateFeed_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateFeed_6_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgCreateFeed at list field Providers as it is not of Message kind"))
}

func (x *_MsgCreateFeed_6_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateFeed_6_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgCreateFeed_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateFeed_9_list)(nil)

type _MsgCreateFeed_9_list struct {
	list *[]*v1beta1.Coin
}

func (x *_MsgCreateFeed_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateFeed_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateFeed_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateFeed_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateFeed_9_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateFeed_9_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateFeed_9_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateFeed_9_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgCreateFeed                    protoreflect.MessageDescriptor
	fd_MsgCreateFeed_feed_name          protoreflect.FieldDescriptor
	fd_MsgCreateFeed_latest_history     protoreflect.FieldDescriptor
	fd_MsgCreateFeed_description        protoreflect.FieldDescriptor
	fd_MsgCreateFeed_creator            protoreflect.FieldDescriptor
	fd_MsgCreateFeed_service_name       protoreflect.FieldDescriptor
	fd_MsgCreateFeed_providers          protoreflect.FieldDescriptor
	fd_MsgCreateFeed_input              protoreflect.FieldDescriptor
	fd_MsgCreateFeed_timeout            protoreflect.FieldDescriptor
	fd_MsgCreateFeed_service_fee_cap    protoreflect.FieldDescriptor
	fd_MsgCreateFeed_repeated_frequency protoreflect.FieldDescriptor
	fd_MsgCreateFeed_aggregate_func     protoreflect.FieldDescriptor
	fd_MsgCreateFeed_value_json_path    protoreflect.FieldDescriptor
	fd_MsgCreateFeed_response_threshold protoreflect.FieldDescriptor
)

func init() {
	file_irismod_oracle_tx_proto_init()
	md_MsgCreateFeed = File_irismod_oracle_tx_proto.Messages().ByName("MsgCreateFeed")
	fd_MsgCreateFeed_feed_name = md_MsgCreateFeed.Fields().ByName("feed_name")
	fd_MsgCreateFeed_latest_history = md_MsgCreateFeed.Fields().ByName("latest_history")
	fd_MsgCreateFeed_description = md_MsgCreateFeed.Fields().ByName("description")
	fd_MsgCreateFeed_creator = md_MsgCreateFeed.Fields().ByName("creator")
	fd_MsgCreateFeed_service_name = md_MsgCreateFeed.Fields().ByName("service_name")
	fd_MsgCreateFeed_providers = md_MsgCreateFeed.Fields().ByName("providers")
	fd_MsgCreateFeed_input = md_MsgCreateFeed.Fields().ByName("input")
	fd_MsgCreateFeed_timeout = md_MsgCreateFeed.Fields().ByName("timeout")
	fd_MsgCreateFeed_service_fee_cap = md_MsgCreateFeed.Fields().ByName("service_fee_cap")
	fd_MsgCreateFeed_repeated_frequency = md_MsgCreateFeed.Fields().ByName("repeated_frequency")
	fd_MsgCreateFeed_aggregate_func = md_MsgCreateFeed.Fields().ByName("aggregate_func")
	fd_MsgCreateFeed_value_json_path = md_MsgCreateFeed.Fields().ByName("value_json_path")
	fd_MsgCreateFeed_response_threshold = md_MsgCreateFeed.Fields().ByName("response_threshold")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateFeed)(nil)

type fastReflection_MsgCreateFeed MsgCreateFeed

func (x *MsgCreateFeed) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateFeed)(x)
}

func (x *MsgCreateFeed) slowProtoReflect() protoreflect.Message {
	mi := &file_irismod_oracle_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateFeed_messageType fastReflection_MsgCreateFeed_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateFeed_messageType{}

type fastReflection_MsgCreateFeed_messageType struct{}

func (x fastReflection_MsgCreateFeed_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateFeed)(nil)
}
func (x fastReflection_MsgCreateFeed_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateFeed)
}
func (x fastReflection_MsgCreateFeed_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateFeed
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateFeed) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateFeed
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateFeed) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateFeed_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateFeed) New() protoreflect.Message {
	return new(fastReflection_MsgCreateFeed)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateFeed) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateFeed)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateFeed) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.FeedName != "" {
		value := protoreflect.ValueOfString(x.FeedName)
		if !f(fd_MsgCreateFeed_feed_name, value) {
			return
		}
	}
	if x.LatestHistory != uint64(0) {
		value := protoreflect.ValueOfUint64(x.LatestHistory)
		if !f(fd_MsgCreateFeed_latest_history, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_MsgCreateFeed_description, value) {
			return
		}
	}
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgCreateFeed_creator, value) {
			return
		}
	}
	if x.ServiceName != "" {
		value := protoreflect.ValueOfString(x.ServiceName)
		if !f(fd_MsgCreateFeed_service_name, value) {
			return
		}
	}
	if len(x.Providers) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateFeed_6_list{list: &x.Providers})
		if !f(fd_MsgCreateFeed_providers, value) {
			return
		}
	}
	if x.Input != "" {
		value := protoreflect.ValueOfString(x.Input)
		if !f(fd_MsgCreateFeed_input, value) {
			return
		}
	}
	if x.Timeout != int64(0) {
		value := protoreflect.ValueOfInt64(x.Timeout)
		if !f(fd_MsgCreateFeed_timeout, value) {
			return
		}
	}
	if len(x.ServiceFeeCap) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateFeed_9_list{list: &x.ServiceFeeCap})
		if !f(fd_MsgCreateFeed_service_fee_cap, value) {
			return
		}
	}
	if x.RepeatedFrequency != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RepeatedFrequency)
		if !f(fd_MsgCreateFeed_repeated_frequency, value) {
			return
		}
	}
	if x.AggregateFunc != "" {
		value := protoreflect.ValueOfString(x.AggregateFunc)
		if !f(fd_MsgCreateFeed_aggregate_func, value) {
			return
		}
	}
	if x.ValueJsonPath != "" {
		value := protoreflect.ValueOfString(x.ValueJsonPath)
		if !f(fd_MsgCreateFeed_value_json_path, value) {
			return
		}
	}
	if x.ResponseThreshold != uint32(0) {
		value := protoreflect.ValueOfUint32(x.ResponseThreshold)
		if !f(fd_MsgCreateFeed_response_threshold, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateFeed) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "irismod.oracle.MsgCreateFeed.feed_name":
		return x.FeedName != ""
	case "irismod.oracle.MsgCreateFeed.latest_history":
		return x.LatestHistory != uint64(0)
	case "irismod.oracle.MsgCreateFeed.description":
		return x.Description != ""
	case "irismod.oracle.MsgCreateFeed.creator":
		return x.Creator != ""
	case "irismod.oracle.MsgCreateFeed.service_name":
		return x.ServiceName != ""
	case "irismod.oracle.MsgCreateFeed.providers":
		return len(x.Providers) != 0
	case "irismod.oracle.MsgCreateFeed.input":
		return x.Input != ""
	case "irismod.oracle.MsgCreateFeed.timeout":
		return x.Timeout != int64(0)
	case "irismod.oracle.MsgCreateFeed.service_fee_cap":
		return len(x.ServiceFeeCap) != 0
	case "irismod.oracle.MsgCreateFeed.repeated_frequency":
		return x.RepeatedFrequency != uint64(0)
	case "irismod.oracle.MsgCreateFeed.aggregate_func":
		return x.AggregateFunc != ""
	case "irismod.oracle.MsgCreateFeed.value_json_path":
		return x.ValueJsonPath != ""
	case "irismod.oracle.MsgCreateFeed.response_threshold":
		return x.ResponseThreshold != uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgCreateFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgCreateFeed does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateFeed) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "irismod.oracle.MsgCreateFeed.feed_name":
		x.FeedName = ""
	case "irismod.oracle.MsgCreateFeed.latest_history":
		x.LatestHistory = uint64(0)
	case "irismod.oracle.MsgCreateFeed.description":
		x.Description = ""
	case "irismod.oracle.MsgCreateFeed.creator":
		x.Creator = ""
	case "irismod.oracle.MsgCreateFeed.service_name":
		x.ServiceName = ""
	case "irismod.oracle.MsgCreateFeed.providers":
		x.Providers = nil
	case "irismod.oracle.MsgCreateFeed.input":
		x.Input = ""
	case "irismod.oracle.MsgCreateFeed.timeout":
		x.Timeout = int64(0)
	case "irismod.oracle.MsgCreateFeed.service_fee_cap":
		x.ServiceFeeCap = nil
	case "irismod.oracle.MsgCreateFeed.repeated_frequency":
		x.RepeatedFrequency = uint64(0)
	case "irismod.oracle.MsgCreateFeed.aggregate_func":
		x.AggregateFunc = ""
	case "irismod.oracle.MsgCreateFeed.value_json_path":
		x.ValueJsonPath = ""
	case "irismod.oracle.MsgCreateFeed.response_threshold":
		x.ResponseThreshold = uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgCreateFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgCreateFeed does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateFeed) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "irismod.oracle.MsgCreateFeed.feed_name":
		value := x.FeedName
		return protoreflect.ValueOfString(value)
	case "irismod.oracle.MsgCreateFeed.latest_history":
		value := x.LatestHistory
		return protoreflect.ValueOfUint64(value)
	case "irismod.oracle.MsgCreateFeed.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "irismod.oracle.MsgCreateFeed.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "irismod.oracle.MsgCreateFeed.service_name":
		value := x.ServiceName
		return protoreflect.ValueOfString(value)
	case "irismod.oracle.MsgCreateFeed.providers":
		if len(x.Providers) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateFeed_6_list{})
		}
		listValue := &_MsgCreateFeed_6_list{list: &x.Providers}
		return protoreflect.ValueOfList(listValue)
	case "irismod.oracle.MsgCreateFeed.input":
		value := x.Input
		return protoreflect.ValueOfString(value)
	case "irismod.oracle.MsgCreateFeed.timeout":
		value := x.Timeout
		return protoreflect.ValueOfInt64(value)
	case "irismod.oracle.MsgCreateFeed.service_fee_cap":
		if len(x.ServiceFeeCap) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateFeed_9_list{})
		}
		listValue := &_MsgCreateFeed_9_list{list: &x.ServiceFeeCap}
		return protoreflect.ValueOfList(listValue)
	case "irismod.oracle.MsgCreateFeed.repeated_frequency":
		value := x.RepeatedFrequency
		return protoreflect.ValueOfUint64(value)
	case "irismod.oracle.MsgCreateFeed.aggregate_func":
		value := x.AggregateFunc
		return protoreflect.ValueOfString(value)
	case "irismod.oracle.MsgCreateFeed.value_json_path":
		value := x.ValueJsonPath
		return protoreflect.ValueOfString(value)
	case "irismod.oracle.MsgCreateFeed.response_threshold":
		value := x.ResponseThreshold
		return protoreflect.ValueOfUint32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgCreateFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgCreateFeed does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateFeed) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "irismod.oracle.MsgCreateFeed.feed_name":
		x.FeedName = value.Interface().(string)
	case "irismod.oracle.MsgCreateFeed.latest_history":
		x.LatestHistory = value.Uint()
	case "irismod.oracle.MsgCreateFeed.description":
		x.Description = value.Interface().(string)
	case "irismod.oracle.MsgCreateFeed.creator":
		x.Creator = value.Interface().(string)
	case "irismod.oracle.MsgCreateFeed.service_name":
		x.ServiceName = value.Interface().(string)
	case "irismod.oracle.MsgCreateFeed.providers":
		lv := value.List()
		clv := lv.(*_MsgCreateFeed_6_list)
		x.Providers = *clv.list
	case "irismod.oracle.MsgCreateFeed.input":
		x.Input = value.Interface().(string)
	case "irismod.oracle.MsgCreateFeed.timeout":
		x.Timeout = value.Int()
	case "irismod.oracle.MsgCreateFeed.service_fee_cap":
		lv := value.List()
		clv := lv.(*_MsgCreateFeed_9_list)
		x.ServiceFeeCap = *clv.list
	case "irismod.oracle.MsgCreateFeed.repeated_frequency":
		x.RepeatedFrequency = value.Uint()
	case "irismod.oracle.MsgCreateFeed.aggregate_func":
		x.AggregateFunc = value.Interface().(string)
	case "irismod.oracle.MsgCreateFeed.value_json_path":
		x.ValueJsonPath = value.Interface().(string)
	case "irismod.oracle.MsgCreateFeed.response_threshold":
		x.ResponseThreshold = uint32(value.Uint())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgCreateFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgCreateFeed does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateFeed) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "irismod.oracle.MsgCreateFeed.providers":
		if x.Providers == nil {
			x.Providers = []string{}
		}
		value := &_MsgCreateFeed_6_list{list: &x.Providers}
		return protoreflect.ValueOfList(value)
	case "irismod.oracle.MsgCreateFeed.service_fee_cap":
		if x.ServiceFeeCap == nil {
			x.ServiceFeeCap = []*v1beta1.Coin{}
		}
		value := &_MsgCreateFeed_9_list{list: &x.ServiceFeeCap}
		return protoreflect.ValueOfList(value)
	case "irismod.oracle.MsgCreateFeed.feed_name":
		panic(fmt.Errorf("field feed_name of message irismod.oracle.MsgCreateFeed is not mutable"))
	case "irismod.oracle.MsgCreateFeed.latest_history":
		panic(fmt.Errorf("field latest_history of message irismod.oracle.MsgCreateFeed is not mutable"))
	case "irismod.oracle.MsgCreateFeed.description":
		panic(fmt.Errorf("field description of message irismod.oracle.MsgCreateFeed is not mutable"))
	case "irismod.oracle.MsgCreateFeed.creator":
		panic(fmt.Errorf("field creator of message irismod.oracle.MsgCreateFeed is not mutable"))
	case "irismod.oracle.MsgCreateFeed.service_name":
		panic(fmt.Errorf("field service_name of message irismod.oracle.MsgCreateFeed is not mutable"))
	case "irismod.oracle.MsgCreateFeed.input":
		panic(fmt.Errorf("field input of message irismod.oracle.MsgCreateFeed is not mutable"))
	case "irismod.oracle.MsgCreateFeed.timeout":
		panic(fmt.Errorf("field timeout of message irismod.oracle.MsgCreateFeed is not mutable"))
	case "irismod.oracle.MsgCreateFeed.repeated_frequency":
		panic(fmt.Errorf("field repeated_frequency of message irismod.oracle.MsgCreateFeed is not mutable"))
	case "irismod.oracle.MsgCreateFeed.aggregate_func":
		panic(fmt.Errorf("field aggregate_func of message irismod.oracle.MsgCreateFeed is not mutable"))
	case "irismod.oracle.MsgCreateFeed.value_json_path":
		panic(fmt.Errorf("field value_json_path of message irismod.oracle.MsgCreateFeed is not mutable"))
	case "irismod.oracle.MsgCreateFeed.response_threshold":
		panic(fmt.Errorf("field response_threshold of message irismod.oracle.MsgCreateFeed is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgCreateFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgCreateFeed does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateFeed) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "irismod.oracle.MsgCreateFeed.feed_name":
		return protoreflect.ValueOfString("")
	case "irismod.oracle.MsgCreateFeed.latest_history":
		return protoreflect.ValueOfUint64(uint64(0))
	case "irismod.oracle.MsgCreateFeed.description":
		return protoreflect.ValueOfString("")
	case "irismod.oracle.MsgCreateFeed.creator":
		return protoreflect.ValueOfString("")
	case "irismod.oracle.MsgCreateFeed.service_name":
		return protoreflect.ValueOfString("")
	case "irismod.oracle.MsgCreateFeed.providers":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgCreateFeed_6_list{list: &list})
	case "irismod.oracle.MsgCreateFeed.input":
		return protoreflect.ValueOfString("")
	case "irismod.oracle.MsgCreateFeed.timeout":
		return protoreflect.ValueOfInt64(int64(0))
	case "irismod.oracle.MsgCreateFeed.service_fee_cap":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_MsgCreateFeed_9_list{list: &list})
	case "irismod.oracle.MsgCreateFeed.repeated_frequency":
		return protoreflect.ValueOfUint64(uint64(0))
	case "irismod.oracle.MsgCreateFeed.aggregate_func":
		return protoreflect.ValueOfString("")
	case "irismod.oracle.MsgCreateFeed.value_json_path":
		return protoreflect.ValueOfString("")
	case "irismod.oracle.MsgCreateFeed.response_threshold":
		return protoreflect.ValueOfUint32(uint32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgCreateFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgCreateFeed does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateFeed) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in irismod.oracle.MsgCreateFeed", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateFeed) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateFeed) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateFeed) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateFeed) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateFeed)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.FeedName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.LatestHistory != 0 {
			n += 1 + runtime.Sov(uint64(x.LatestHistory))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ServiceName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Providers) > 0 {
			for _, s := range x.Providers {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Input)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Timeout != 0 {
			n += 1 + runtime.Sov(uint64(x.Timeout))
		}
		if len(x.ServiceFeeCap) > 0 {
			for _, e := range x.ServiceFeeCap {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.RepeatedFrequency != 0 {
			n += 1 + runtime.Sov(uint64(x.RepeatedFrequency))
		}
		l = len(x.AggregateFunc)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ValueJsonPath)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ResponseThreshold != 0 {
			n += 1 + runtime.Sov(uint64(x.ResponseThreshold))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateFeed)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ResponseThreshold != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ResponseThreshold))
			i--
			dAtA[i] = 0x68
		}
		if len(x.ValueJsonPath) > 0 {
			i -= len(x.ValueJsonPath)
			copy(dAtA[i:], x.ValueJsonPath)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValueJsonPath)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.AggregateFunc) > 0 {
			i -= len(x.AggregateFunc)
			copy(dAtA[i:], x.AggregateFunc)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AggregateFunc)))
			i--
			dAtA[i] = 0x5a
		}
		if x.RepeatedFrequency != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RepeatedFrequency))
			i--
			dAtA[i] = 0x50
		}
		if len(x.ServiceFeeCap) > 0 {
			for iNdEx := len(x.ServiceFeeCap) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ServiceFeeCap[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4a
			}
		}
		if x.Timeout != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Timeout))
			i--
			dAtA[i] = 0x40
		}
		if len(x.Input) > 0 {
			i -= len(x.Input)
			copy(dAtA[i:], x.Input)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Input)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.Providers) > 0 {
			for iNdEx := len(x.Providers) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Providers[iNdEx])
				copy(dAtA[i:], x.Providers[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Providers[iNdEx])))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.ServiceName) > 0 {
			i -= len(x.ServiceName)
			copy(dAtA[i:], x.ServiceName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ServiceName)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x1a
		}
		if x.LatestHistory != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LatestHistory))
			i--
			dAtA[i] = 0x10
		}
		if len(x.FeedName) > 0 {
			i -= len(x.FeedName)
			copy(dAtA[i:], x.FeedName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FeedName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateFeed)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateFeed: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateFeed: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FeedName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FeedName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestHistory", wireType)
				}
				x.LatestHistory = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LatestHistory |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ServiceName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Providers", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Providers = append(x.Providers, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Input", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Input = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Timeout", wireType)
				}
				x.Timeout = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Timeout |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ServiceFeeCap", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ServiceFeeCap = append(x.ServiceFeeCap, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ServiceFeeCap[len(x.ServiceFeeCap)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RepeatedFrequency", wireType)
				}
				x.RepeatedFrequency = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RepeatedFrequency |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AggregateFunc", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AggregateFunc = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValueJsonPath", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValueJsonPath = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 13:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ResponseThreshold", wireType)
				}
				x.ResponseThreshold = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ResponseThreshold |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCreateFeedResponse protoreflect.MessageDescriptor
)

func init() {
	file_irismod_oracle_tx_proto_init()
	md_MsgCreateFeedResponse = File_irismod_oracle_tx_proto.Messages().ByName("MsgCreateFeedResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateFeedResponse)(nil)

type fastReflection_MsgCreateFeedResponse MsgCreateFeedResponse

func (x *MsgCreateFeedResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateFeedResponse)(x)
}

func (x *MsgCreateFeedResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_irismod_oracle_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateFeedResponse_messageType fastReflection_MsgCreateFeedResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateFeedResponse_messageType{}

type fastReflection_MsgCreateFeedResponse_messageType struct{}

func (x fastReflection_MsgCreateFeedResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateFeedResponse)(nil)
}
func (x fastReflection_MsgCreateFeedResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateFeedResponse)
}
func (x fastReflection_MsgCreateFeedResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateFeedResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateFeedResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateFeedResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateFeedResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateFeedResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateFeedResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCreateFeedResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateFeedResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateFeedResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateFeedResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateFeedResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgCreateFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgCreateFeedResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateFeedResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgCreateFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgCreateFeedResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateFeedResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgCreateFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgCreateFeedResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateFeedResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgCreateFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgCreateFeedResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateFeedResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgCreateFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgCreateFeedResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateFeedResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgCreateFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgCreateFeedResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateFeedResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in irismod.oracle.MsgCreateFeedResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateFeedResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateFeedResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateFeedResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateFeedResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateFeedResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateFeedResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateFeedResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateFeedResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateFeedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgStartFeed           protoreflect.MessageDescriptor
	fd_MsgStartFeed_feed_name protoreflect.FieldDescriptor
	fd_MsgStartFeed_creator   protoreflect.FieldDescriptor
)

func init() {
	file_irismod_oracle_tx_proto_init()
	md_MsgStartFeed = File_irismod_oracle_tx_proto.Messages().ByName("MsgStartFeed")
	fd_MsgStartFeed_feed_name = md_MsgStartFeed.Fields().ByName("feed_name")
	fd_MsgStartFeed_creator = md_MsgStartFeed.Fields().ByName("creator")
}

var _ protoreflect.Message = (*fastReflection_MsgStartFeed)(nil)

type fastReflection_MsgStartFeed MsgStartFeed

func (x *MsgStartFeed) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgStartFeed)(x)
}

func (x *MsgStartFeed) slowProtoReflect() protoreflect.Message {
	mi := &file_irismod_oracle_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgStartFeed_messageType fastReflection_MsgStartFeed_messageType
var _ protoreflect.MessageType = fastReflection_MsgStartFeed_messageType{}

type fastReflection_MsgStartFeed_messageType struct{}

func (x fastReflection_MsgStartFeed_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgStartFeed)(nil)
}
func (x fastReflection_MsgStartFeed_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgStartFeed)
}
func (x fastReflection_MsgStartFeed_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgStartFeed
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgStartFeed) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgStartFeed
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgStartFeed) Type() protoreflect.MessageType {
	return _fastReflection_MsgStartFeed_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgStartFeed) New() protoreflect.Message {
	return new(fastReflection_MsgStartFeed)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgStartFeed) Interface() protoreflect.ProtoMessage {
	return (*MsgStartFeed)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgStartFeed) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.FeedName != "" {
		value := protoreflect.ValueOfString(x.FeedName)
		if !f(fd_MsgStartFeed_feed_name, value) {
			return
		}
	}
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgStartFeed_creator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgStartFeed) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "irismod.oracle.MsgStartFeed.feed_name":
		return x.FeedName != ""
	case "irismod.oracle.MsgStartFeed.creator":
		return x.Creator != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgStartFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgStartFeed does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStartFeed) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "irismod.oracle.MsgStartFeed.feed_name":
		x.FeedName = ""
	case "irismod.oracle.MsgStartFeed.creator":
		x.Creator = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgStartFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgStartFeed does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgStartFeed) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "irismod.oracle.MsgStartFeed.feed_name":
		value := x.FeedName
		return protoreflect.ValueOfString(value)
	case "irismod.oracle.MsgStartFeed.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgStartFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgStartFeed does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStartFeed) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "irismod.oracle.MsgStartFeed.feed_name":
		x.FeedName = value.Interface().(string)
	case "irismod.oracle.MsgStartFeed.creator":
		x.Creator = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgStartFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgStartFeed does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStartFeed) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "irismod.oracle.MsgStartFeed.feed_name":
		panic(fmt.Errorf("field feed_name of message irismod.oracle.MsgStartFeed is not mutable"))
	case "irismod.oracle.MsgStartFeed.creator":
		panic(fmt.Errorf("field creator of message irismod.oracle.MsgStartFeed is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgStartFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgStartFeed does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgStartFeed) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "irismod.oracle.MsgStartFeed.feed_name":
		return protoreflect.ValueOfString("")
	case "irismod.oracle.MsgStartFeed.creator":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgStartFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgStartFeed does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgStartFeed) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in irismod.oracle.MsgStartFeed", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgStartFeed) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStartFeed) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgStartFeed) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgStartFeed) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgStartFeed)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.FeedName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgStartFeed)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.FeedName) > 0 {
			i -= len(x.FeedName)
			copy(dAtA[i:], x.FeedName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FeedName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgStartFeed)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgStartFeed: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgStartFeed: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FeedName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FeedName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgStartFeedResponse protoreflect.MessageDescriptor
)

func init() {
	file_irismod_oracle_tx_proto_init()
	md_MsgStartFeedResponse = File_irismod_oracle_tx_proto.Messages().ByName("MsgStartFeedResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgStartFeedResponse)(nil)

type fastReflection_MsgStartFeedResponse MsgStartFeedResponse

func (x *MsgStartFeedResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgStartFeedResponse)(x)
}

func (x *MsgStartFeedResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_irismod_oracle_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgStartFeedResponse_messageType fastReflection_MsgStartFeedResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgStartFeedResponse_messageType{}

type fastReflection_MsgStartFeedResponse_messageType struct{}

func (x fastReflection_MsgStartFeedResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgStartFeedResponse)(nil)
}
func (x fastReflection_MsgStartFeedResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgStartFeedResponse)
}
func (x fastReflection_MsgStartFeedResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgStartFeedResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgStartFeedResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgStartFeedResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgStartFeedResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgStartFeedResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgStartFeedResponse) New() protoreflect.Message {
	return new(fastReflection_MsgStartFeedResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgStartFeedResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgStartFeedResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgStartFeedResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgStartFeedResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgStartFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgStartFeedResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStartFeedResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgStartFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgStartFeedResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgStartFeedResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgStartFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgStartFeedResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStartFeedResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgStartFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgStartFeedResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStartFeedResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgStartFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgStartFeedResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgStartFeedResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgStartFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgStartFeedResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgStartFeedResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in irismod.oracle.MsgStartFeedResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgStartFeedResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStartFeedResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgStartFeedResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgStartFeedResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgStartFeedResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgStartFeedResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgStartFeedResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgStartFeedResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgStartFeedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgPauseFeed           protoreflect.MessageDescriptor
	fd_MsgPauseFeed_feed_name protoreflect.FieldDescriptor
	fd_MsgPauseFeed_creator   protoreflect.FieldDescriptor
)

func init() {
	file_irismod_oracle_tx_proto_init()
	md_MsgPauseFeed = File_irismod_oracle_tx_proto.Messages().ByName("MsgPauseFeed")
	fd_MsgPauseFeed_feed_name = md_MsgPauseFeed.Fields().ByName("feed_name")
	fd_MsgPauseFeed_creator = md_MsgPauseFeed.Fields().ByName("creator")
}

var _ protoreflect.Message = (*fastReflection_MsgPauseFeed)(nil)

type fastReflection_MsgPauseFeed MsgPauseFeed

func (x *MsgPauseFeed) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgPauseFeed)(x)
}

func (x *MsgPauseFeed) slowProtoReflect() protoreflect.Message {
	mi := &file_irismod_oracle_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgPauseFeed_messageType fastReflection_MsgPauseFeed_messageType
var _ protoreflect.MessageType = fastReflection_MsgPauseFeed_messageType{}

type fastReflection_MsgPauseFeed_messageType struct{}

func (x fastReflection_MsgPauseFeed_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgPauseFeed)(nil)
}
func (x fastReflection_MsgPauseFeed_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgPauseFeed)
}
func (x fastReflection_MsgPauseFeed_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgPauseFeed
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgPauseFeed) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgPauseFeed
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgPauseFeed) Type() protoreflect.MessageType {
	return _fastReflection_MsgPauseFeed_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgPauseFeed) New() protoreflect.Message {
	return new(fastReflection_MsgPauseFeed)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgPauseFeed) Interface() protoreflect.ProtoMessage {
	return (*MsgPauseFeed)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgPauseFeed) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.FeedName != "" {
		value := protoreflect.ValueOfString(x.FeedName)
		if !f(fd_MsgPauseFeed_feed_name, value) {
			return
		}
	}
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgPauseFeed_creator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgPauseFeed) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "irismod.oracle.MsgPauseFeed.feed_name":
		return x.FeedName != ""
	case "irismod.oracle.MsgPauseFeed.creator":
		return x.Creator != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgPauseFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgPauseFeed does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPauseFeed) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "irismod.oracle.MsgPauseFeed.feed_name":
		x.FeedName = ""
	case "irismod.oracle.MsgPauseFeed.creator":
		x.Creator = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgPauseFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgPauseFeed does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgPauseFeed) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "irismod.oracle.MsgPauseFeed.feed_name":
		value := x.FeedName
		return protoreflect.ValueOfString(value)
	case "irismod.oracle.MsgPauseFeed.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgPauseFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgPauseFeed does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPauseFeed) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "irismod.oracle.MsgPauseFeed.feed_name":
		x.FeedName = value.Interface().(string)
	case "irismod.oracle.MsgPauseFeed.creator":
		x.Creator = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgPauseFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgPauseFeed does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPauseFeed) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "irismod.oracle.MsgPauseFeed.feed_name":
		panic(fmt.Errorf("field feed_name of message irismod.oracle.MsgPauseFeed is not mutable"))
	case "irismod.oracle.MsgPauseFeed.creator":
		panic(fmt.Errorf("field creator of message irismod.oracle.MsgPauseFeed is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgPauseFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgPauseFeed does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgPauseFeed) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "irismod.oracle.MsgPauseFeed.feed_name":
		return protoreflect.ValueOfString("")
	case "irismod.oracle.MsgPauseFeed.creator":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgPauseFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgPauseFeed does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgPauseFeed) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in irismod.oracle.MsgPauseFeed", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgPauseFeed) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPauseFeed) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgPauseFeed) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgPauseFeed) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgPauseFeed)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.FeedName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgPauseFeed)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.FeedName) > 0 {
			i -= len(x.FeedName)
			copy(dAtA[i:], x.FeedName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FeedName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgPauseFeed)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgPauseFeed: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgPauseFeed: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FeedName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FeedName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgPauseFeedResponse protoreflect.MessageDescriptor
)

func init() {
	file_irismod_oracle_tx_proto_init()
	md_MsgPauseFeedResponse = File_irismod_oracle_tx_proto.Messages().ByName("MsgPauseFeedResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgPauseFeedResponse)(nil)

type fastReflection_MsgPauseFeedResponse MsgPauseFeedResponse

func (x *MsgPauseFeedResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgPauseFeedResponse)(x)
}

func (x *MsgPauseFeedResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_irismod_oracle_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgPauseFeedResponse_messageType fastReflection_MsgPauseFeedResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgPauseFeedResponse_messageType{}

type fastReflection_MsgPauseFeedResponse_messageType struct{}

func (x fastReflection_MsgPauseFeedResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgPauseFeedResponse)(nil)
}
func (x fastReflection_MsgPauseFeedResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgPauseFeedResponse)
}
func (x fastReflection_MsgPauseFeedResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgPauseFeedResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgPauseFeedResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgPauseFeedResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgPauseFeedResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgPauseFeedResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgPauseFeedResponse) New() protoreflect.Message {
	return new(fastReflection_MsgPauseFeedResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgPauseFeedResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgPauseFeedResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgPauseFeedResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgPauseFeedResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgPauseFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgPauseFeedResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPauseFeedResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgPauseFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgPauseFeedResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgPauseFeedResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgPauseFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgPauseFeedResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPauseFeedResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgPauseFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgPauseFeedResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPauseFeedResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgPauseFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgPauseFeedResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgPauseFeedResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgPauseFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgPauseFeedResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgPauseFeedResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in irismod.oracle.MsgPauseFeedResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgPauseFeedResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPauseFeedResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgPauseFeedResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgPauseFeedResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgPauseFeedResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgPauseFeedResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgPauseFeedResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgPauseFeedResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgPauseFeedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgEditFeed_4_list)(nil)

type _MsgEditFeed_4_list struct {
	list *[]string
}

func (x *_MsgEditFeed_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgEditFeed_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgEditFeed_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgEditFeed_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgEditFeed_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgEditFeed at list field Providers as it is not of Message kind"))
}

func (x *_MsgEditFeed_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgEditFeed_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgEditFeed_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgEditFeed_6_list)(nil)

type _MsgEditFeed_6_list struct {
	list *[]*v1beta1.Coin
}

func (x *_MsgEditFeed_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgEditFeed_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgEditFeed_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_MsgEditFeed_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgEditFeed_6_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgEditFeed_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgEditFeed_6_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgEditFeed_6_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgEditFeed                    protoreflect.MessageDescriptor
	fd_MsgEditFeed_feed_name          protoreflect.FieldDescriptor
	fd_MsgEditFeed_description        protoreflect.FieldDescriptor
	fd_MsgEditFeed_latest_history     protoreflect.FieldDescriptor
	fd_MsgEditFeed_providers          protoreflect.FieldDescriptor
	fd_MsgEditFeed_timeout            protoreflect.FieldDescriptor
	fd_MsgEditFeed_service_fee_cap    protoreflect.FieldDescriptor
	fd_MsgEditFeed_repeated_frequency protoreflect.FieldDescriptor
	fd_MsgEditFeed_response_threshold protoreflect.FieldDescriptor
	fd_MsgEditFeed_creator            protoreflect.FieldDescriptor
)

func init() {
	file_irismod_oracle_tx_proto_init()
	md_MsgEditFeed = File_irismod_oracle_tx_proto.Messages().ByName("MsgEditFeed")
	fd_MsgEditFeed_feed_name = md_MsgEditFeed.Fields().ByName("feed_name")
	fd_MsgEditFeed_description = md_MsgEditFeed.Fields().ByName("description")
	fd_MsgEditFeed_latest_history = md_MsgEditFeed.Fields().ByName("latest_history")
	fd_MsgEditFeed_providers = md_MsgEditFeed.Fields().ByName("providers")
	fd_MsgEditFeed_timeout = md_MsgEditFeed.Fields().ByName("timeout")
	fd_MsgEditFeed_service_fee_cap = md_MsgEditFeed.Fields().ByName("service_fee_cap")
	fd_MsgEditFeed_repeated_frequency = md_MsgEditFeed.Fields().ByName("repeated_frequency")
	fd_MsgEditFeed_response_threshold = md_MsgEditFeed.Fields().ByName("response_threshold")
	fd_MsgEditFeed_creator = md_MsgEditFeed.Fields().ByName("creator")
}

var _ protoreflect.Message = (*fastReflection_MsgEditFeed)(nil)

type fastReflection_MsgEditFeed MsgEditFeed

func (x *MsgEditFeed) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgEditFeed)(x)
}

func (x *MsgEditFeed) slowProtoReflect() protoreflect.Message {
	mi := &file_irismod_oracle_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgEditFeed_messageType fastReflection_MsgEditFeed_messageType
var _ protoreflect.MessageType = fastReflection_MsgEditFeed_messageType{}

type fastReflection_MsgEditFeed_messageType struct{}

func (x fastReflection_MsgEditFeed_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgEditFeed)(nil)
}
func (x fastReflection_MsgEditFeed_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgEditFeed)
}
func (x fastReflection_MsgEditFeed_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgEditFeed
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgEditFeed) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgEditFeed
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgEditFeed) Type() protoreflect.MessageType {
	return _fastReflection_MsgEditFeed_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgEditFeed) New() protoreflect.Message {
	return new(fastReflection_MsgEditFeed)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgEditFeed) Interface() protoreflect.ProtoMessage {
	return (*MsgEditFeed)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgEditFeed) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.FeedName != "" {
		value := protoreflect.ValueOfString(x.FeedName)
		if !f(fd_MsgEditFeed_feed_name, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_MsgEditFeed_description, value) {
			return
		}
	}
	if x.LatestHistory != uint64(0) {
		value := protoreflect.ValueOfUint64(x.LatestHistory)
		if !f(fd_MsgEditFeed_latest_history, value) {
			return
		}
	}
	if len(x.Providers) != 0 {
		value := protoreflect.ValueOfList(&_MsgEditFeed_4_list{list: &x.Providers})
		if !f(fd_MsgEditFeed_providers, value) {
			return
		}
	}
	if x.Timeout != int64(0) {
		value := protoreflect.ValueOfInt64(x.Timeout)
		if !f(fd_MsgEditFeed_timeout, value) {
			return
		}
	}
	if len(x.ServiceFeeCap) != 0 {
		value := protoreflect.ValueOfList(&_MsgEditFeed_6_list{list: &x.ServiceFeeCap})
		if !f(fd_MsgEditFeed_service_fee_cap, value) {
			return
		}
	}
	if x.RepeatedFrequency != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RepeatedFrequency)
		if !f(fd_MsgEditFeed_repeated_frequency, value) {
			return
		}
	}
	if x.ResponseThreshold != uint32(0) {
		value := protoreflect.ValueOfUint32(x.ResponseThreshold)
		if !f(fd_MsgEditFeed_response_threshold, value) {
			return
		}
	}
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgEditFeed_creator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgEditFeed) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "irismod.oracle.MsgEditFeed.feed_name":
		return x.FeedName != ""
	case "irismod.oracle.MsgEditFeed.description":
		return x.Description != ""
	case "irismod.oracle.MsgEditFeed.latest_history":
		return x.LatestHistory != uint64(0)
	case "irismod.oracle.MsgEditFeed.providers":
		return len(x.Providers) != 0
	case "irismod.oracle.MsgEditFeed.timeout":
		return x.Timeout != int64(0)
	case "irismod.oracle.MsgEditFeed.service_fee_cap":
		return len(x.ServiceFeeCap) != 0
	case "irismod.oracle.MsgEditFeed.repeated_frequency":
		return x.RepeatedFrequency != uint64(0)
	case "irismod.oracle.MsgEditFeed.response_threshold":
		return x.ResponseThreshold != uint32(0)
	case "irismod.oracle.MsgEditFeed.creator":
		return x.Creator != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgEditFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgEditFeed does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditFeed) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "irismod.oracle.MsgEditFeed.feed_name":
		x.FeedName = ""
	case "irismod.oracle.MsgEditFeed.description":
		x.Description = ""
	case "irismod.oracle.MsgEditFeed.latest_history":
		x.LatestHistory = uint64(0)
	case "irismod.oracle.MsgEditFeed.providers":
		x.Providers = nil
	case "irismod.oracle.MsgEditFeed.timeout":
		x.Timeout = int64(0)
	case "irismod.oracle.MsgEditFeed.service_fee_cap":
		x.ServiceFeeCap = nil
	case "irismod.oracle.MsgEditFeed.repeated_frequency":
		x.RepeatedFrequency = uint64(0)
	case "irismod.oracle.MsgEditFeed.response_threshold":
		x.ResponseThreshold = uint32(0)
	case "irismod.oracle.MsgEditFeed.creator":
		x.Creator = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgEditFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgEditFeed does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgEditFeed) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "irismod.oracle.MsgEditFeed.feed_name":
		value := x.FeedName
		return protoreflect.ValueOfString(value)
	case "irismod.oracle.MsgEditFeed.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "irismod.oracle.MsgEditFeed.latest_history":
		value := x.LatestHistory
		return protoreflect.ValueOfUint64(value)
	case "irismod.oracle.MsgEditFeed.providers":
		if len(x.Providers) == 0 {
			return protoreflect.ValueOfList(&_MsgEditFeed_4_list{})
		}
		listValue := &_MsgEditFeed_4_list{list: &x.Providers}
		return protoreflect.ValueOfList(listValue)
	case "irismod.oracle.MsgEditFeed.timeout":
		value := x.Timeout
		return protoreflect.ValueOfInt64(value)
	case "irismod.oracle.MsgEditFeed.service_fee_cap":
		if len(x.ServiceFeeCap) == 0 {
			return protoreflect.ValueOfList(&_MsgEditFeed_6_list{})
		}
		listValue := &_MsgEditFeed_6_list{list: &x.ServiceFeeCap}
		return protoreflect.ValueOfList(listValue)
	case "irismod.oracle.MsgEditFeed.repeated_frequency":
		value := x.RepeatedFrequency
		return protoreflect.ValueOfUint64(value)
	case "irismod.oracle.MsgEditFeed.response_threshold":
		value := x.ResponseThreshold
		return protoreflect.ValueOfUint32(value)
	case "irismod.oracle.MsgEditFeed.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgEditFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgEditFeed does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditFeed) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "irismod.oracle.MsgEditFeed.feed_name":
		x.FeedName = value.Interface().(string)
	case "irismod.oracle.MsgEditFeed.description":
		x.Description = value.Interface().(string)
	case "irismod.oracle.MsgEditFeed.latest_history":
		x.LatestHistory = value.Uint()
	case "irismod.oracle.MsgEditFeed.providers":
		lv := value.List()
		clv := lv.(*_MsgEditFeed_4_list)
		x.Providers = *clv.list
	case "irismod.oracle.MsgEditFeed.timeout":
		x.Timeout = value.Int()
	case "irismod.oracle.MsgEditFeed.service_fee_cap":
		lv := value.List()
		clv := lv.(*_MsgEditFeed_6_list)
		x.ServiceFeeCap = *clv.list
	case "irismod.oracle.MsgEditFeed.repeated_frequency":
		x.RepeatedFrequency = value.Uint()
	case "irismod.oracle.MsgEditFeed.response_threshold":
		x.ResponseThreshold = uint32(value.Uint())
	case "irismod.oracle.MsgEditFeed.creator":
		x.Creator = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgEditFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgEditFeed does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditFeed) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "irismod.oracle.MsgEditFeed.providers":
		if x.Providers == nil {
			x.Providers = []string{}
		}
		value := &_MsgEditFeed_4_list{list: &x.Providers}
		return protoreflect.ValueOfList(value)
	case "irismod.oracle.MsgEditFeed.service_fee_cap":
		if x.ServiceFeeCap == nil {
			x.ServiceFeeCap = []*v1beta1.Coin{}
		}
		value := &_MsgEditFeed_6_list{list: &x.ServiceFeeCap}
		return protoreflect.ValueOfList(value)
	case "irismod.oracle.MsgEditFeed.feed_name":
		panic(fmt.Errorf("field feed_name of message irismod.oracle.MsgEditFeed is not mutable"))
	case "irismod.oracle.MsgEditFeed.description":
		panic(fmt.Errorf("field description of message irismod.oracle.MsgEditFeed is not mutable"))
	case "irismod.oracle.MsgEditFeed.latest_history":
		panic(fmt.Errorf("field latest_history of message irismod.oracle.MsgEditFeed is not mutable"))
	case "irismod.oracle.MsgEditFeed.timeout":
		panic(fmt.Errorf("field timeout of message irismod.oracle.MsgEditFeed is not mutable"))
	case "irismod.oracle.MsgEditFeed.repeated_frequency":
		panic(fmt.Errorf("field repeated_frequency of message irismod.oracle.MsgEditFeed is not mutable"))
	case "irismod.oracle.MsgEditFeed.response_threshold":
		panic(fmt.Errorf("field response_threshold of message irismod.oracle.MsgEditFeed is not mutable"))
	case "irismod.oracle.MsgEditFeed.creator":
		panic(fmt.Errorf("field creator of message irismod.oracle.MsgEditFeed is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgEditFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgEditFeed does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgEditFeed) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "irismod.oracle.MsgEditFeed.feed_name":
		return protoreflect.ValueOfString("")
	case "irismod.oracle.MsgEditFeed.description":
		return protoreflect.ValueOfString("")
	case "irismod.oracle.MsgEditFeed.latest_history":
		return protoreflect.ValueOfUint64(uint64(0))
	case "irismod.oracle.MsgEditFeed.providers":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgEditFeed_4_list{list: &list})
	case "irismod.oracle.MsgEditFeed.timeout":
		return protoreflect.ValueOfInt64(int64(0))
	case "irismod.oracle.MsgEditFeed.service_fee_cap":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_MsgEditFeed_6_list{list: &list})
	case "irismod.oracle.MsgEditFeed.repeated_frequency":
		return protoreflect.ValueOfUint64(uint64(0))
	case "irismod.oracle.MsgEditFeed.response_threshold":
		return protoreflect.ValueOfUint32(uint32(0))
	case "irismod.oracle.MsgEditFeed.creator":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgEditFeed"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgEditFeed does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgEditFeed) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in irismod.oracle.MsgEditFeed", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgEditFeed) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditFeed) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgEditFeed) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgEditFeed) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgEditFeed)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.FeedName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.LatestHistory != 0 {
			n += 1 + runtime.Sov(uint64(x.LatestHistory))
		}
		if len(x.Providers) > 0 {
			for _, s := range x.Providers {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Timeout != 0 {
			n += 1 + runtime.Sov(uint64(x.Timeout))
		}
		if len(x.ServiceFeeCap) > 0 {
			for _, e := range x.ServiceFeeCap {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.RepeatedFrequency != 0 {
			n += 1 + runtime.Sov(uint64(x.RepeatedFrequency))
		}
		if x.ResponseThreshold != 0 {
			n += 1 + runtime.Sov(uint64(x.ResponseThreshold))
		}
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgEditFeed)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0x4a
		}
		if x.ResponseThreshold != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ResponseThreshold))
			i--
			dAtA[i] = 0x40
		}
		if x.RepeatedFrequency != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RepeatedFrequency))
			i--
			dAtA[i] = 0x38
		}
		if len(x.ServiceFeeCap) > 0 {
			for iNdEx := len(x.ServiceFeeCap) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ServiceFeeCap[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if x.Timeout != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Timeout))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Providers) > 0 {
			for iNdEx := len(x.Providers) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Providers[iNdEx])
				copy(dAtA[i:], x.Providers[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Providers[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.LatestHistory != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LatestHistory))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.FeedName) > 0 {
			i -= len(x.FeedName)
			copy(dAtA[i:], x.FeedName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FeedName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgEditFeed)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgEditFeed: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgEditFeed: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FeedName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FeedName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestHistory", wireType)
				}
				x.LatestHistory = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LatestHistory |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Providers", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Providers = append(x.Providers, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Timeout", wireType)
				}
				x.Timeout = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Timeout |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ServiceFeeCap", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ServiceFeeCap = append(x.ServiceFeeCap, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ServiceFeeCap[len(x.ServiceFeeCap)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RepeatedFrequency", wireType)
				}
				x.RepeatedFrequency = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RepeatedFrequency |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ResponseThreshold", wireType)
				}
				x.ResponseThreshold = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ResponseThreshold |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgEditFeedResponse protoreflect.MessageDescriptor
)

func init() {
	file_irismod_oracle_tx_proto_init()
	md_MsgEditFeedResponse = File_irismod_oracle_tx_proto.Messages().ByName("MsgEditFeedResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgEditFeedResponse)(nil)

type fastReflection_MsgEditFeedResponse MsgEditFeedResponse

func (x *MsgEditFeedResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgEditFeedResponse)(x)
}

func (x *MsgEditFeedResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_irismod_oracle_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgEditFeedResponse_messageType fastReflection_MsgEditFeedResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgEditFeedResponse_messageType{}

type fastReflection_MsgEditFeedResponse_messageType struct{}

func (x fastReflection_MsgEditFeedResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgEditFeedResponse)(nil)
}
func (x fastReflection_MsgEditFeedResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgEditFeedResponse)
}
func (x fastReflection_MsgEditFeedResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgEditFeedResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgEditFeedResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgEditFeedResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgEditFeedResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgEditFeedResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgEditFeedResponse) New() protoreflect.Message {
	return new(fastReflection_MsgEditFeedResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgEditFeedResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgEditFeedResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgEditFeedResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgEditFeedResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgEditFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgEditFeedResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditFeedResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgEditFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgEditFeedResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgEditFeedResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgEditFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgEditFeedResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditFeedResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgEditFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgEditFeedResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditFeedResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgEditFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgEditFeedResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgEditFeedResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: irismod.oracle.MsgEditFeedResponse"))
		}
		panic(fmt.Errorf("message irismod.oracle.MsgEditFeedResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgEditFeedResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in irismod.oracle.MsgEditFeedResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgEditFeedResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditFeedResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgEditFeedResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgEditFeedResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgEditFeedResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgEditFeedResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgEditFeedResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgEditFeedResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgEditFeedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: irismod/oracle/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MsgCreateFeed defines an sdk.Msg type that supports creating a feed
type MsgCreateFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedName          string          `protobuf:"bytes,1,opt,name=feed_name,json=feedName,proto3" json:"feed_name,omitempty"`
	LatestHistory     uint64          `protobuf:"varint,2,opt,name=latest_history,json=latestHistory,proto3" json:"latest_history,omitempty"`
	Description       string          `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Creator           string          `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	ServiceName       string          `protobuf:"bytes,5,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Providers         []string        `protobuf:"bytes,6,rep,name=providers,proto3" json:"providers,omitempty"`
	Input             string          `protobuf:"bytes,7,opt,name=input,proto3" json:"input,omitempty"`
	Timeout           int64           `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout,omitempty"`
	ServiceFeeCap     []*v1beta1.Coin `protobuf:"bytes,9,rep,name=service_fee_cap,json=serviceFeeCap,proto3" json:"service_fee_cap,omitempty"`
	RepeatedFrequency uint64          `protobuf:"varint,10,opt,name=repeated_frequency,json=repeatedFrequency,proto3" json:"repeated_frequency,omitempty"`
	AggregateFunc     string          `protobuf:"bytes,11,opt,name=aggregate_func,json=aggregateFunc,proto3" json:"aggregate_func,omitempty"`
	ValueJsonPath     string          `protobuf:"bytes,12,opt,name=value_json_path,json=valueJsonPath,proto3" json:"value_json_path,omitempty"`
	ResponseThreshold uint32          `protobuf:"varint,13,opt,name=response_threshold,json=responseThreshold,proto3" json:"response_threshold,omitempty"`
}

func (x *MsgCreateFeed) Reset() {
	*x = MsgCreateFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irismod_oracle_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateFeed) ProtoMessage() {}

// Deprecated: Use MsgCreateFeed.ProtoReflect.Descriptor instead.
func (*MsgCreateFeed) Descriptor() ([]byte, []int) {
	return file_irismod_oracle_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgCreateFeed) GetFeedName() string {
	if x != nil {
		return x.FeedName
	}
	return ""
}

func (x *MsgCreateFeed) GetLatestHistory() uint64 {
	if x != nil {
		return x.LatestHistory
	}
	return 0
}

func (x *MsgCreateFeed) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgCreateFeed) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateFeed) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *MsgCreateFeed) GetProviders() []string {
	if x != nil {
		return x.Providers
	}
	return nil
}

func (x *MsgCreateFeed) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *MsgCreateFeed) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *MsgCreateFeed) GetServiceFeeCap() []*v1beta1.Coin {
	if x != nil {
		return x.ServiceFeeCap
	}
	return nil
}

func (x *MsgCreateFeed) GetRepeatedFrequency() uint64 {
	if x != nil {
		return x.RepeatedFrequency
	}
	return 0
}

func (x *MsgCreateFeed) GetAggregateFunc() string {
	if x != nil {
		return x.AggregateFunc
	}
	return ""
}

func (x *MsgCreateFeed) GetValueJsonPath() string {
	if x != nil {
		return x.ValueJsonPath
	}
	return ""
}

func (x *MsgCreateFeed) GetResponseThreshold() uint32 {
	if x != nil {
		return x.ResponseThreshold
	}
	return 0
}

// MsgCreateFeedResponse defines the Msg/CreateFeed response type
type MsgCreateFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCreateFeedResponse) Reset() {
	*x = MsgCreateFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irismod_oracle_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateFeedResponse) ProtoMessage() {}

// Deprecated: Use MsgCreateFeedResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateFeedResponse) Descriptor() ([]byte, []int) {
	return file_irismod_oracle_tx_proto_rawDescGZIP(), []int{1}
}

// MsgPauseFeed defines an sdk.Msg type that supports stating a feed
type MsgStartFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedName string `protobuf:"bytes,1,opt,name=feed_name,json=feedName,proto3" json:"feed_name,omitempty"`
	Creator  string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *MsgStartFeed) Reset() {
	*x = MsgStartFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irismod_oracle_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgStartFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgStartFeed) ProtoMessage() {}

// Deprecated: Use MsgStartFeed.ProtoReflect.Descriptor instead.
func (*MsgStartFeed) Descriptor() ([]byte, []int) {
	return file_irismod_oracle_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgStartFeed) GetFeedName() string {
	if x != nil {
		return x.FeedName
	}
	return ""
}

func (x *MsgStartFeed) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

// MsgStartFeedResponse defines the Msg/StartFeed response type
type MsgStartFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgStartFeedResponse) Reset() {
	*x = MsgStartFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irismod_oracle_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgStartFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgStartFeedResponse) ProtoMessage() {}

// Deprecated: Use MsgStartFeedResponse.ProtoReflect.Descriptor instead.
func (*MsgStartFeedResponse) Descriptor() ([]byte, []int) {
	return file_irismod_oracle_tx_proto_rawDescGZIP(), []int{3}
}

// MsgPauseFeed defines an sdk.Msg type that supports pausing a feed
type MsgPauseFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedName string `protobuf:"bytes,1,opt,name=feed_name,json=feedName,proto3" json:"feed_name,omitempty"`
	Creator  string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *MsgPauseFeed) Reset() {
	*x = MsgPauseFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irismod_oracle_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPauseFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPauseFeed) ProtoMessage() {}

// Deprecated: Use MsgPauseFeed.ProtoReflect.Descriptor instead.
func (*MsgPauseFeed) Descriptor() ([]byte, []int) {
	return file_irismod_oracle_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgPauseFeed) GetFeedName() string {
	if x != nil {
		return x.FeedName
	}
	return ""
}

func (x *MsgPauseFeed) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

// MsgPauseFeedResponse defines the Msg/PauseFeed response type
type MsgPauseFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgPauseFeedResponse) Reset() {
	*x = MsgPauseFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irismod_oracle_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPauseFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPauseFeedResponse) ProtoMessage() {}

// Deprecated: Use MsgPauseFeedResponse.ProtoReflect.Descriptor instead.
func (*MsgPauseFeedResponse) Descriptor() ([]byte, []int) {
	return file_irismod_oracle_tx_proto_rawDescGZIP(), []int{5}
}

// MsgEditFeed defines an sdk.Msg type that supports editing a feed
type MsgEditFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedName          string          `protobuf:"bytes,1,opt,name=feed_name,json=feedName,proto3" json:"feed_name,omitempty"`
	Description       string          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	LatestHistory     uint64          `protobuf:"varint,3,opt,name=latest_history,json=latestHistory,proto3" json:"latest_history,omitempty"`
	Providers         []string        `protobuf:"bytes,4,rep,name=providers,proto3" json:"providers,omitempty"`
	Timeout           int64           `protobuf:"varint,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	ServiceFeeCap     []*v1beta1.Coin `protobuf:"bytes,6,rep,name=service_fee_cap,json=serviceFeeCap,proto3" json:"service_fee_cap,omitempty"`
	RepeatedFrequency uint64          `protobuf:"varint,7,opt,name=repeated_frequency,json=repeatedFrequency,proto3" json:"repeated_frequency,omitempty"`
	ResponseThreshold uint32          `protobuf:"varint,8,opt,name=response_threshold,json=responseThreshold,proto3" json:"response_threshold,omitempty"`
	Creator           string          `protobuf:"bytes,9,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *MsgEditFeed) Reset() {
	*x = MsgEditFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irismod_oracle_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgEditFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgEditFeed) ProtoMessage() {}

// Deprecated: Use MsgEditFeed.ProtoReflect.Descriptor instead.
func (*MsgEditFeed) Descriptor() ([]byte, []int) {
	return file_irismod_oracle_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgEditFeed) GetFeedName() string {
	if x != nil {
		return x.FeedName
	}
	return ""
}

func (x *MsgEditFeed) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgEditFeed) GetLatestHistory() uint64 {
	if x != nil {
		return x.LatestHistory
	}
	return 0
}

func (x *MsgEditFeed) GetProviders() []string {
	if x != nil {
		return x.Providers
	}
	return nil
}

func (x *MsgEditFeed) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *MsgEditFeed) GetServiceFeeCap() []*v1beta1.Coin {
	if x != nil {
		return x.ServiceFeeCap
	}
	return nil
}

func (x *MsgEditFeed) GetRepeatedFrequency() uint64 {
	if x != nil {
		return x.RepeatedFrequency
	}
	return 0
}

func (x *MsgEditFeed) GetResponseThreshold() uint32 {
	if x != nil {
		return x.ResponseThreshold
	}
	return 0
}

func (x *MsgEditFeed) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

// MsgEditFeedResponse defines the Msg/EditFeed response type
type MsgEditFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgEditFeedResponse) Reset() {
	*x = MsgEditFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irismod_oracle_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgEditFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgEditFeedResponse) ProtoMessage() {}

// Deprecated: Use MsgEditFeedResponse.ProtoReflect.Descriptor instead.
func (*MsgEditFeedResponse) Descriptor() ([]byte, []int) {
	return file_irismod_oracle_tx_proto_rawDescGZIP(), []int{7}
}

var File_irismod_oracle_tx_proto protoreflect.FileDescriptor

var file_irismod_oracle_tx_proto_rawDesc = []byte{
	0x0a, 0x17, 0x69, 0x72, 0x69, 0x73, 0x6d, 0x6f, 0x64, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x69, 0x72, 0x69, 0x73, 0x6d,
	0x6f, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xfc, 0x05, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x12, 0x31, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x66, 0x65, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x19, 0xf2, 0xde,
	0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x52, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xf2, 0xde, 0x1f, 0x13, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x8d, 0x01, 0x0a,
	0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x63, 0x61, 0x70,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69,
	0x6e, 0x42, 0x4a, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x16, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x63, 0x61, 0x70,
	0x22, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x12, 0x4c, 0x0a, 0x12,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x42, 0x1d, 0xf2, 0xde, 0x1f, 0x19, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x52, 0x11, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x40, 0x0a, 0x0e, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x19, 0xf2, 0xde, 0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x22, 0x52, 0x0d, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x42, 0x0a, 0x0f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xf2, 0xde, 0x1f, 0x16, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x22, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x4c, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x1d, 0xf2, 0xde,
	0x1f, 0x19, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x52, 0x11, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x17,
	0x0a, 0x15, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x46, 0x65, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xf2, 0xde, 0x1f, 0x10,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x22, 0x16, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x0c,
	0x4d, 0x73, 0x67, 0x50, 0x61, 0x75, 0x73, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x09,
	0x66, 0x65, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x65, 0x65, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x16, 0x0a, 0x14, 0x4d, 0x73, 0x67,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xa2, 0x04, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x45, 0x64, 0x69, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x12, 0x31, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x66, 0x65, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0e, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x19,
	0xf2, 0xde, 0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x52, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x12, 0x8d, 0x01, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x65,
	0x5f, 0x63, 0x61, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x4a, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x16, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x65,
	0x5f, 0x63, 0x61, 0x70, 0x22, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x73, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70,
	0x12, 0x4c, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x42, 0x1d, 0xf2, 0xde,
	0x1f, 0x19, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x52, 0x11, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x4c,
	0x0a, 0x12, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x1d, 0xf2, 0xde, 0x1f, 0x19,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x52, 0x11, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x15, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x45, 0x64, 0x69,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc9, 0x02,
	0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x52, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x69, 0x72, 0x69, 0x73, 0x6d, 0x6f, 0x64, 0x2e, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65,
	0x65, 0x64, 0x1a, 0x25, 0x2e, 0x69, 0x72, 0x69, 0x73, 0x6d, 0x6f, 0x64, 0x2e, 0x6f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x08, 0x45, 0x64, 0x69,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x12, 0x1b, 0x2e, 0x69, 0x72, 0x69, 0x73, 0x6d, 0x6f, 0x64, 0x2e,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x64, 0x69, 0x74, 0x46, 0x65,
	0x65, 0x64, 0x1a, 0x23, 0x2e, 0x69, 0x72, 0x69, 0x73, 0x6d, 0x6f, 0x64, 0x2e, 0x6f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x64, 0x69, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x46, 0x65, 0x65, 0x64, 0x12, 0x1c, 0x2e, 0x69, 0x72, 0x69, 0x73, 0x6d, 0x6f, 0x64, 0x2e, 0x6f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x65,
	0x65, 0x64, 0x1a, 0x24, 0x2e, 0x69, 0x72, 0x69, 0x73, 0x6d, 0x6f, 0x64, 0x2e, 0x6f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x65, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x09, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x1c, 0x2e, 0x69, 0x72, 0x69, 0x73, 0x6d, 0x6f, 0x64, 0x2e,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x75, 0x73, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x1a, 0x24, 0x2e, 0x69, 0x72, 0x69, 0x73, 0x6d, 0x6f, 0x64, 0x2e, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x75, 0x73, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x9b, 0x01, 0x0a, 0x12, 0x63, 0x6f,
	0x6d, 0x2e, 0x69, 0x72, 0x69, 0x73, 0x6d, 0x6f, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x42, 0x07, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x23, 0x6d, 0x6f, 0x64,
	0x73, 0x2e, 0x69, 0x72, 0x69, 0x73, 0x6e, 0x65, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x69, 0x72, 0x69, 0x73, 0x6d, 0x6f, 0x64, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0xa2, 0x02, 0x03, 0x49, 0x4f, 0x58, 0xaa, 0x02, 0x0e, 0x49, 0x72, 0x69, 0x73, 0x6d, 0x6f, 0x64,
	0x2e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0xca, 0x02, 0x0e, 0x49, 0x72, 0x69, 0x73, 0x6d, 0x6f,
	0x64, 0x5c, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0xe2, 0x02, 0x1a, 0x49, 0x72, 0x69, 0x73, 0x6d,
	0x6f, 0x64, 0x5c, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x49, 0x72, 0x69, 0x73, 0x6d, 0x6f, 0x64, 0x3a,
	0x3a, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_irismod_oracle_tx_proto_rawDescOnce sync.Once
	file_irismod_oracle_tx_proto_rawDescData = file_irismod_oracle_tx_proto_rawDesc
)

func file_irismod_oracle_tx_proto_rawDescGZIP() []byte {
	file_irismod_oracle_tx_proto_rawDescOnce.Do(func() {
		file_irismod_oracle_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_irismod_oracle_tx_proto_rawDescData)
	})
	return file_irismod_oracle_tx_proto_rawDescData
}

var file_irismod_oracle_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_irismod_oracle_tx_proto_goTypes = []interface{}{
	(*MsgCreateFeed)(nil),         // 0: irismod.oracle.MsgCreateFeed
	(*MsgCreateFeedResponse)(nil), // 1: irismod.oracle.MsgCreateFeedResponse
	(*MsgStartFeed)(nil),          // 2: irismod.oracle.MsgStartFeed
	(*MsgStartFeedResponse)(nil),  // 3: irismod.oracle.MsgStartFeedResponse
	(*MsgPauseFeed)(nil),          // 4: irismod.oracle.MsgPauseFeed
	(*MsgPauseFeedResponse)(nil),  // 5: irismod.oracle.MsgPauseFeedResponse
	(*MsgEditFeed)(nil),           // 6: irismod.oracle.MsgEditFeed
	(*MsgEditFeedResponse)(nil),   // 7: irismod.oracle.MsgEditFeedResponse
	(*v1beta1.Coin)(nil),          // 8: cosmos.base.v1beta1.Coin
}
var file_irismod_oracle_tx_proto_depIdxs = []int32{
	8, // 0: irismod.oracle.MsgCreateFeed.service_fee_cap:type_name -> cosmos.base.v1beta1.Coin
	8, // 1: irismod.oracle.MsgEditFeed.service_fee_cap:type_name -> cosmos.base.v1beta1.Coin
	0, // 2: irismod.oracle.Msg.CreateFeed:input_type -> irismod.oracle.MsgCreateFeed
	6, // 3: irismod.oracle.Msg.EditFeed:input_type -> irismod.oracle.MsgEditFeed
	2, // 4: irismod.oracle.Msg.StartFeed:input_type -> irismod.oracle.MsgStartFeed
	4, // 5: irismod.oracle.Msg.PauseFeed:input_type -> irismod.oracle.MsgPauseFeed
	1, // 6: irismod.oracle.Msg.CreateFeed:output_type -> irismod.oracle.MsgCreateFeedResponse
	7, // 7: irismod.oracle.Msg.EditFeed:output_type -> irismod.oracle.MsgEditFeedResponse
	3, // 8: irismod.oracle.Msg.StartFeed:output_type -> irismod.oracle.MsgStartFeedResponse
	5, // 9: irismod.oracle.Msg.PauseFeed:output_type -> irismod.oracle.MsgPauseFeedResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_irismod_oracle_tx_proto_init() }
func file_irismod_oracle_tx_proto_init() {
	if File_irismod_oracle_tx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_irismod_oracle_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irismod_oracle_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irismod_oracle_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgStartFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irismod_oracle_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgStartFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irismod_oracle_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPauseFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irismod_oracle_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPauseFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irismod_oracle_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgEditFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irismod_oracle_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgEditFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_irismod_oracle_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_irismod_oracle_tx_proto_goTypes,
		DependencyIndexes: file_irismod_oracle_tx_proto_depIdxs,
		MessageInfos:      file_irismod_oracle_tx_proto_msgTypes,
	}.Build()
	File_irismod_oracle_tx_proto = out.File
	file_irismod_oracle_tx_proto_rawDesc = nil
	file_irismod_oracle_tx_proto_goTypes = nil
	file_irismod_oracle_tx_proto_depIdxs = nil
}
